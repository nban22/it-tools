@implements IDisposable
@inject NavigationManager NavigationManager

<!-- Header -->
<div class="text-white bg-gradient-to-br from-teal-600 via-teal-700 to-teal-800 shadow-lg p-6 text-center w-full">
    <h1 class="text-3xl font-extrabold tracking-tight uppercase">IT - Tools</h1>
    <p class="mt-1 text-sm font-medium text-teal-100 opacity-90">Handy tools for developers</p>
</div>

<!-- Menu -->
<div class="flex-1 overflow-y-auto bg-gray-50">
    @foreach (var group in ToolGroups)
    {
        <div class="border-b border-gray-200 last:border-b-0">
            <!-- Group Header -->
            <button @onclick="() => ToggleGroup(group)"
                class="w-full flex items-center justify-between px-5 py-4 text-gray-700 bg-white hover:bg-gray-100 focus:outline-none transition-colors duration-150 ease-in-out shadow-sm">
                <span class="font-semibold text-sm uppercase tracking-wide">@group.Name</span>
                <svg class="@(group.IsExpanded ? "rotate-90" : "") w-5 h-5 text-gray-500 transition-transform duration-200" 
                    fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
            </button>

            <!-- Group Items -->
            @if (group.IsExpanded)
            {
                <div class="bg-gray-50 pl-5 py-2">
                    @foreach (var tool in group.Tools)
                    {
                        <a href="@tool.Url" 
                           class="flex items-center px-4 py-3 text-gray-600 hover:bg-white hover:text-teal-600 rounded-lg mx-2 my-1 transition-all duration-150 ease-in-out group">
                            @if (!string.IsNullOrEmpty(tool.Icon))
                            {
                                <span class="mr-3 text-lg w-5 text-center group-hover:text-teal-500">@tool.Icon</span>
                            }
                            <span class="font-medium text-sm">@tool.Name</span>
                        </a>
                    }
                </div>
            }
        </div>
    }
</div>

@code {
    public class Tool
    {
        public string Name { get; set; } = string.Empty;
        public string Icon { get; set; } = string.Empty;
        public string Url { get; set; } = string.Empty;
    }

    public class ToolGroup
    {
        public string Name { get; set; } = string.Empty;
        public List<Tool> Tools { get; set; } = new List<Tool>();
        public bool IsExpanded { get; set; } = false;
    }

    private List<ToolGroup> ToolGroups { get; set; } = new List<ToolGroup>();

    protected override void OnInitialized()
    {
        ToolGroups = new List<ToolGroup>
{
new ToolGroup
{
Name = "Your favorite tools",
Tools = new List<Tool>
{
new Tool { Name = "Token generator", Icon = "⟐", Url = "/token-generator" },
new Tool { Name = "Crypto", Icon = "", Url = "/crypto" },
new Tool { Name = "Converter", Icon = "", Url = "/converter" },
new Tool { Name = "Web", Icon = "", Url = "/web" }
}
},
new ToolGroup
{
Name = "Images & Videos",
Tools = new List<Tool>
{
new Tool { Name = "QR Code generator", Icon = "🔳", Url = "/qr-code-generator" },
new Tool { Name = "WiFi QR", Icon = "📶", Url = "/wifi-qr" },
new Tool { Name = "SVG placeholder generator", Icon = "🖼️", Url = "/svg-placeholder" },
new Tool { Name = "Camera recorder", Icon = "📸", Url = "/camera-recorder" }
}
},
new ToolGroup
{
Name = "Development",
Tools = new List<Tool>
{
new Tool { Name = "Git cheatsheet", Icon = "🔧", Url = "/git-cheatsheet" },
new Tool { Name = "Random port generator", Icon = "🔢", Url = "/random-port" },
new Tool { Name = "Crontab generator", Icon = "⏰", Url = "/crontab-generator" },
new Tool { Name = "JSON pretty and format", Icon = "{}", Url = "/json-pretty" },
new Tool { Name = "JSON minify", Icon = "{}", Url = "/json-minify" }
}
}
};
    }

    private void ToggleGroup(ToolGroup group)
    {
        group.IsExpanded = !group.IsExpanded;
    }

    public void Dispose()
    {
        // Để trống vì hiện tại không cần cleanup tài nguyên
    }
}