@using it_tools.Data.Services
@inject IUserService UserService
@inject NavigationManager NavigationManager

<div class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
    <div class="bg-white rounded-lg shadow-xl w-full max-w-md overflow-hidden">
        @if (paymentProcessing)
        {
            <!-- Processing Payment UI -->
            <div class="p-6 text-center">
                <div class="inline-flex items-center justify-center w-16 h-16 bg-amber-100 rounded-full mb-4">
                    <div class="w-8 h-8 border-4 border-amber-500 border-t-transparent rounded-full animate-spin"></div>
                </div>
                <h3 class="text-xl font-bold text-gray-800 mb-2">Processing Payment</h3>
                <p class="text-gray-600 mb-4">Please wait while we process your payment...</p>
                <div class="w-full bg-gray-200 rounded-full h-2.5 mb-2">
                    <div class="bg-amber-500 h-2.5 rounded-full" style="width: @(100 - (countdownSeconds * 33))%"></div>
                </div>
                <p class="text-sm text-gray-500">@countdownSeconds seconds remaining</p>
            </div>
        }
        else if (paymentSuccess)
        {
            <!-- Payment Success UI -->
            <div class="p-6 text-center">
                <div class="inline-flex items-center justify-center w-16 h-16 bg-green-100 rounded-full mb-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                </div>
                <h3 class="text-xl font-bold text-gray-800 mb-2">Payment Successful!</h3>
                <p class="text-gray-600 mb-6">Your account has been upgraded to Premium.</p>
                <div class="bg-green-50 border border-green-100 rounded-lg p-4 mb-6 text-left">
                    <h4 class="font-medium text-green-800 mb-2">Premium Benefits Activated:</h4>
                    <ul class="space-y-2">
                        <li class="flex items-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            <span>Access to all premium tools</span>
                        </li>
                        <li class="flex items-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            <span>Priority support</span>
                        </li>
                        <li class="flex items-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            <span>Ad-free experience</span>
                        </li>
                    </ul>
                </div>
                <button @onclick="ReturnToPreviousPage" 
                        class="w-full px-4 py-2 bg-teal-600 text-white rounded-md hover:bg-teal-700 transition-colors">
                    Return to Previous Page
                </button>
            </div>
        }
        else
        {
            <!-- Payment Form UI -->
            <div class="bg-gradient-to-r from-amber-500 to-amber-600 p-4">
                <div class="flex items-center justify-between">
                    <h3 class="text-xl font-bold text-white">Upgrade to Premium</h3>
                    <button @onclick="CloseModal" class="text-white hover:text-amber-200 transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
            </div>
            <div class="p-6">
                <div class="bg-amber-50 rounded-lg p-4 mb-6">
                    <h4 class="font-semibold text-amber-800 mb-2">Premium Plan - $9.99/month</h4>
                    <ul class="space-y-2">
                        <li class="flex items-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-amber-600 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            <span>Access to all premium tools</span>
                        </li>
                        <li class="flex items-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-amber-600 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            <span>Priority support and advanced features</span>
                        </li>
                        <li class="flex items-start">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-amber-600 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            <span>Ad-free experience</span>
                        </li>
                    </ul>
                </div>
                
                <div class="space-y-4 mb-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Card Number</label>
                        <div class="relative">
                            <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-teal-500 focus:border-teal-500" 
                                    placeholder="1234 5678 9012 3456" value="4242 4242 4242 4242" readonly />
                            <div class="absolute inset-y-0 right-0 flex items-center pr-3">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                                </svg>
                            </div>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Expiration Date</label>
                            <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-teal-500 focus:border-teal-500" 
                                    placeholder="MM/YY" value="12/25" readonly />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">CVV</label>
                            <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-teal-500 focus:border-teal-500" 
                                    placeholder="123" value="123" readonly />
                        </div>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Cardholder Name</label>
                        <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-teal-500 focus:border-teal-500" 
                                placeholder="John Doe" value="Demo User" readonly />
                    </div>
                </div>
                
                <div class="text-xs text-gray-500 mb-6">
                    <p>This is a simulated payment form. In a real application, we would integrate with a payment processor.</p>
                    <p class="mt-1">For this demo, we're using placeholder data. Click the button below to simulate payment.</p>
                </div>
                
                <button @onclick="ProcessPayment" 
                        class="w-full px-4 py-2 bg-gradient-to-r from-amber-500 to-amber-600 text-white rounded-md hover:from-amber-600 hover:to-amber-700 transition-colors">
                    Upgrade Now - $9.99/month
                </button>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public EventCallback OnSuccess { get; set; }

    [Parameter]
    public string? CurrentUserId { get; set; }

    private bool paymentProcessing = false;
    private bool paymentSuccess = false;
    private int countdownSeconds = 3;

    private async Task CloseModal()
    {
        await OnClose.InvokeAsync();
    }

    private async Task ProcessPayment()
    {
        paymentProcessing = true;
        countdownSeconds = 3;
        
        // Simulate payment processing with countdown
        for (int i = 0; i < 3; i++)
        {
            await Task.Delay(1000);
            countdownSeconds--;
            StateHasChanged();
        }
        
        // Update user to premium status in database
        if (!string.IsNullOrEmpty(CurrentUserId))
        {
            try
            {
                await UserService.SetUserPremiumStatusAsync(CurrentUserId, true);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error updating premium status: {ex.Message}");
            }
        }
        
        // Show success
        paymentProcessing = false;
        paymentSuccess = true;
    }

    private async Task ReturnToPreviousPage()
    {
        await OnSuccess.InvokeAsync();
    }
}