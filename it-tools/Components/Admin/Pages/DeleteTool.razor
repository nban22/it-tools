@page "/admin/tools/delete"

@using Microsoft.EntityFrameworkCore
@layout it_tools.Components.Admin.Layout.AdminLayout
@inject it_tools.Data.Services.IToolService ToolService
@inject it_tools.Data.Repositories.IToolRepository ToolRepository

<h3 class="text-xl font-semibold text-gray-800 mb-6">Xóa công cụ</h3>

@if (allToolGroups == null)
{
    <p>Đang tải...</p>
}
else
{
    <ul class="space-y-4">
        @foreach (var toolGroup in allToolGroups)
        {
            if (toolGroup.Tools != null)
            {
                @foreach (var tool in toolGroup.Tools)
                {
                    <li class="flex flex-col p-4 bg-white rounded-lg shadow space-y-2">
                        <span class="text-gray-900 font-bold">@toolGroup.Name</span>
                        <div class="flex justify-between items-center">
                            <span class="text-gray-700">@tool.Name</span>
                            <button @onclick=@(() => DeleteSelectedTool(tool))
                                class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">
                                Xóa
                            </button>
                        </div>
                    </li>
                }
            }
        }
    </ul>
}

@code {
    private List<ToolGroupDto>? allToolGroups;

    protected override async Task OnInitializedAsync()
    {
        allToolGroups = await ToolRepository.GetAllToolGroupsForAdminAsync();
        @* tools = allToolGroups.SelectMany(g => g.Tools).ToList(); // Lấy danh sách công cụ từ tất cả các nhóm *@
    }

    private async Task DeleteSelectedTool(ToolDto tool)
    {
        await ToolService.DeleteToolAsync(tool.Id);
        allToolGroups = await ToolRepository.GetAllToolGroupsForAdminAsync();
    }
}